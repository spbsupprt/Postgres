---
- name: Configure PostgreSQL replication and backup
  hosts: all
  become: yes
  vars:
    replicator_password: 'Otus2022!'
    barman_password: 'Otus2022!'
    master_ip: '192.168.57.11'
    slave_ip: '192.168.57.12'
    barman_ip: '192.168.57.13'
    postgres_version: '14'

  tasks:
    - name: Install common packages
      apt:
        name:
          - vim
          - telnet
          - python3-psycopg2
        state: present
        update_cache: yes

- name: Configure PostgreSQL master
  hosts: master
  become: yes
  tasks:
    - name: Install PostgreSQL
      apt:
        name:
          - postgresql
          - postgresql-contrib
        state: present
        update_cache: yes

    - name: Ensure PostgreSQL is running
      service:
        name: postgresql
        state: started
        enabled: yes

    - name: Create replication user
      become_user: postgres
      postgresql_user:
        name: replicator
        password: "{{ replicator_password }}"
        role_attr_flags: REPLICATION
        encrypted: yes

    - name: Configure postgresql.conf
      template:
        src: templates/postgresql.conf.j2
        dest: /etc/postgresql/{{ postgres_version }}/main/postgresql.conf
        owner: postgres
        group: postgres
        mode: '0640'
      notify: restart postgresql

    - name: Configure pg_hba.conf
      template:
        src: templates/pg_hba.conf.j2
        dest: /etc/postgresql/{{ postgres_version }}/main/pg_hba.conf
        owner: postgres
        group: postgres
        mode: '0640'
      notify: restart postgresql

    - name: Create test database
      become_user: postgres
      postgresql_db:
        name: otus_test
        state: present

    - name: Create barman user
      become_user: postgres
      postgresql_user:
        name: barman
        password: "{{ barman_password }}"
        role_attr_flags: SUPERUSER

  handlers:
    - name: restart postgresql
      service:
        name: postgresql
        state: restarted

- name: Configure PostgreSQL slave
  hosts: slave
  become: yes
  tasks:
    - name: Install PostgreSQL
      apt:
        name:
          - postgresql
          - postgresql-contrib
        state: present
        update_cache: yes

    - name: Stop PostgreSQL before setup
      service:
        name: postgresql
        state: stopped

    - name: Clean data directory
      file:
        path: /var/lib/postgresql/{{ postgres_version }}/main/
        state: absent

    - name: Copy base backup from master
      become_user: postgres
      command: >
        pg_basebackup -h {{ master_ip }} -U replicator -D /var/lib/postgresql/{{ postgres_version }}/main/ -R -P -X stream
      environment:
        PGPASSWORD: "{{ replicator_password }}"

    - name: Configure postgresql.conf
      template:
        src: templates/postgresql-slave.conf.j2
        dest: /etc/postgresql/{{ postgres_version }}/main/postgresql.conf
        owner: postgres
        group: postgres
        mode: '0640'

    - name: Start PostgreSQL
      service:
        name: postgresql
        state: started
        enabled: yes

- name: Configure Barman server
  hosts: barman
  become: yes
  tasks:
    - name: Install Barman and PostgreSQL client
      apt:
        name:
          - barman
          - barman-cli
          - postgresql-client
        state: present
        update_cache: yes

    - name: Create Barman user
      user:
        name: barman
        shell: /bin/bash
        system: yes

    - name: Generate SSH key for Barman
      become_user: barman
      command: ssh-keygen -t rsa -b 4096 -f /var/lib/barman/.ssh/id_rsa -N ""
      args:
        creates: /var/lib/barman/.ssh/id_rsa

    - name: Configure .pgpass file
      become_user: barman
      template:
        src: templates/pgpass.j2
        dest: /var/lib/barman/.pgpass
        owner: barman
        group: barman
        mode: '0600'

    - name: Configure barman.conf
      template:
        src: templates/barman.conf.j2
        dest: /etc/barman.conf
        owner: barman
        group: barman
        mode: '0640'

    - name: Configure server config
      template:
        src: templates/node1.conf.j2
        dest: /etc/barman.d/node1.conf
        owner: barman
        group: barman
        mode: '0640'

    - name: Initialize backup directory
      file:
        path: /var/lib/barman/node1
        state: directory
        owner: barman
        group: barman
        mode: '0755'

    - name: Test connection to PostgreSQL
      become_user: barman
      command: barman check node1
      register: barman_check
      changed_when: false

    - name: Display Barman check output
      debug:
        var: barman_check.stdout_lines
